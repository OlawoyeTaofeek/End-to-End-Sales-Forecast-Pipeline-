services:
  minio:
    image: minio/minio:latest
    platform: linux/arm64
    container_name: minio
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web Console
    environment:
      MINIO_ROOT_USER: minioadmin        # Change in production
      MINIO_ROOT_PASSWORD: minioadmin    # Change in production
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - airflow
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  minio-mc:
    image: minio/mc:latest
    platform: linux/arm64
    container_name: minio-mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin &&
      mc mb myminio/mlflow-artifacts || true &&
      mc anonymous set public myminio/mlflow-artifacts &&
      tail -f /dev/null
      "

  mlflow:
    image: python:3.11-slim
    container_name: mlflow
    platform: linux/arm64
    command: >
      bash -c "
      pip install mlflow==2.9.2 psycopg2-binary boto3 &&
      export MLFLOW_S3_ENDPOINT_URL=http://minio:9000 &&
      mlflow server
        --host 0.0.0.0
        --port 5001
        --backend-store-uri postgresql://mlflow:mlflow@mlflow-db:5432/mlflow
        --default-artifact-root s3://mlflow-artifacts/
      "
    ports:
      - "5001:5001"   # MLflow Tracking UI
    environment:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_DEFAULT_REGION: us-east-1
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    volumes:
      - ./mlflow_data:/mlflow
    depends_on:
      minio:
        condition: service_healthy
      mlflow-db:
        condition: service_healthy
    networks:
      - airflow
      - default

  mlflow-db:
    image: postgres:16-alpine
    platform: linux/arm64
    container_name: mlflow-db
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - mlflow-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", '-U', 'mlflow']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - airflow
      - default
    restart: unless-stopped

volumes:
  minio_data:
  mlflow_data:
  mlflow-db-volume:

networks:
  airflow:
    external: true
    name: sales-forecast_1dd3e4_airflow
  default:
    name: sales-forecast_1dd3e4_default